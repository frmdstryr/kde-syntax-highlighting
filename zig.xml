<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE language SYSTEM "language.dtd">
<language name="Zig" version="1" kateversion="5.0" section="Sources" extensions="*.zig" mimetype="text/zig" priority="5">
<highlighting>
    <list name="flow">
        <item>anyerror</item>
        <item>break</item>
        <item>cancel</item>
        <item>catch</item>
        <item>continue</item>
        <item>defer</item>
        <item>else</item>
        <item>errdefer</item>
        <item>error</item>
        <item>for</item>
        <item>if</item>
        <item>noalias</item>
        <item>return</item>
        <item>section</item>
        <item>switch</item>
        <item>this</item>
        <item>try</item>
        <item>while</item>
        <item>and</item>
        <item>or</item>
        <item>orelse</item>
    </list>
    <list name="modifiers">
        <item>align</item>
        <item>export</item>
        <item>extern</item>
        <item>packed</item>
        <item>pub</item>
        <item>inline</item>
        <item>nakedcc</item>
        <item>stdcallcc</item>
        <item>volatile</item>
    </list>
    <list name="preprocessor">
        <item>assert</item>
        <item>comptime</item>
        <item>test</item>
    </list>
    <list name="async">
        <item>async</item>
        <item>await</item>
        <item>suspend</item>
        <item>resume</item>
    </list>
    <list name="defines">
        <item>fn</item>
        <item>const</item>
        <item>var</item>
        <item>enum</item>
        <item>struct</item>
        <item>asm</item>
        <item>use</item>
        <item>union</item>
    </list>
    <list name="types">
        <item>bool</item>
        <item>c_int</item>
        <item>c_long</item>
        <item>c_longlong</item>
        <item>c_longdouble</item>
        <item>c_short</item>
        <item>c_uint</item>
        <item>c_ulong</item>
        <item>c_ulonglong</item>
        <item>c_ushort</item>
        <item>c_void</item>
        <item>f16</item>
        <item>f32</item>
        <item>f64</item>
        <item>f128</item>
        <item>i2</item>
        <item>i3</item>
        <item>i4</item>
        <item>i5</item>
        <item>i6</item>
        <item>i7</item>
        <item>i8</item>
        <item>i16</item>
        <item>i29</item>
        <item>i32</item>
        <item>i64</item>
        <item>i128</item>
        <item>isize</item>
        <item>noreturn</item>
        <item>promise</item>
        <item>type</item>
        <item>u2</item>
        <item>u3</item>
        <item>u4</item>
        <item>u5</item>
        <item>u6</item>
        <item>u7</item>
        <item>u8</item>
        <item>u16</item>
        <item>u29</item>
        <item>u32</item>
        <item>u64</item>
        <item>u128</item>
        <item>usize</item>
        <item>void</item>
    </list>
    <list name="constants">
        <item>false</item>
        <item>null</item>
        <item>true</item>
        <item>undefined</item>
        <item>unreachable</item>
    </list>
    <list name="self">
        <item>self</item>
    </list>
    <list name="operators">
        <item>=</item>
        <item>==</item>
        <item>+</item>
        <item>+=</item>
        <item>+%</item>
        <item>+%=</item>
        <item>-</item>
        <item>-=</item>
        <item>-%</item>
        <item>-%=</item>
        <item>*</item>
        <item>*=</item>
        <item>*%</item>
        <item>*%=</item>
        <item>/</item>
        <item>/=</item>
        <item>/%</item>
        <item>/%=</item>
        <item>%</item>
        <item>%=</item>

        <item>>></item>
        <item>>>=</item>
        <!--<item><<</item>
        <item><<=</item>
        <item>&</item>
        <item>&=</item>
        <item><</item>
            <item><=</item>-->
        <item>|</item>
        <item>|=</item>
        <item>^</item>
        <item>^=</item>
        <item>~</item>
        <item>.?</item>
        <item>!</item>
        <item>!=</item>
        <item>></item>
        <item>>=</item>
        <item>++</item>
        <item>--</item>
        <item>**</item>
        <item>.*</item>
        <item>||</item>
    </list>
	<contexts>
        <context attribute="Normal Text" lineEndContext="#stay" name="Normal">
            <DetectSpaces/>
            <keyword String="flow" attribute="Flow Keyword" context="#stay"/>
            <keyword String="function" attribute="Function" context="#stay"/>
            <keyword String="async" attribute="Async Keyword" context="#stay"/>
            <keyword String="preprocessor" attribute="Comptime Keyword" context="#stay"/>
            <keyword String="defines" attribute="Definition Keyword" context="#stay"/>
            <keyword String="modifiers" attribute="Modifier Keyword" context="#stay"/>
            <keyword String="types" attribute="Type" context="#stay"/>
            <keyword String="self" attribute="Self" context="#stay"/>
            <keyword String="constants" attribute="Constant" context="#stay"/>
            <keyword String="operators" attribute="Symbol" context="#stay"/>
            <Detect2Chars char="/" char1="/" attribute="Comment" context="Comment"/>
            <RegExpr String="\b0b[01]+\b" attribute="Binary" context="#stay"/>
            <RegExpr String="\b0b([01]*[^01][0-9a-zA-Z_]*)?\b" attribute="Error" context="#stay"/>
            <RegExpr String="\b0o[0-7]+\b" attribute="Octal" context="#stay"/>
            <RegExpr String="\b0o([0-7]*[^0-7][0-9a-zA-Z_]*)?\b" attribute="Error" context="#stay"/>
            <RegExpr String="\b0x[0-9a-fA-F]+\b" attribute="Hex" context="#stay"/>
            <RegExpr String="\b0o([0-9a-fA-F]*[^0-9a-fA-F][0-9a-zA-Z_]*)?\b" attribute="Error" context="#stay"/>
            <RegExpr String="\b[0-9]+\.[0-9]+\b" attribute="Float" context="#stay"/>
            <RegExpr String="\b[0-9]+\.[0-9]+[eE][\+\-]?[0-9]+\b" attribute="Float" context="#stay"/>
            <RegExpr String="\b[0-9]+[eE][\+\-]?[0-9]+\b" attribute="Float" context="#stay"/>
            <RegExpr String="\b[0-9]+\b" attribute="Decimal" context="#stay"/>
            <RegExpr String="\b[0-9]([eE][\+\-]?|[0-9a-zA-Z_\.])+\b" attribute="Error" context="#stay"/>
            <RegExpr String="'(\\([nrt\\'&quot;]|x[0-9a-fA-F]{2})|[^'\\])'" attribute="Character" context="#stay"/>
            <DetectChar char="{" attribute="Symbol" context="#stay" beginRegion="Brace"/>
            <DetectChar char="}" attribute="Symbol" context="#stay" endRegion="Brace"/>
            <DetectChar char="&quot;" attribute="String" context="String" />
            <Detect2Chars char="c" char1="&quot;" attribute="String" context="String"/>
            <Detect2Chars char="@" char1="&quot;" attribute="String" context="String"/>
            <Detect2Chars char="\" char1="\" attribute="String" context="Multiline String"/>
            <StringDetect String="c\\" attribute="String" context="Multiline String"/>
            <RegExpr String="@[_a-zA-Z][_a-zA-Z0-9]*\b" attribute="Builtin Function" context="#stay"/>
            <RegExpr String="\b[_a-zA-Z][_a-zA-Z0-9]*\b(?![\(\{])" attribute="Normal Text" context="#stay"/>
            <RegExpr String="\b[_a-z][_a-zA-Z0-9]*\b" attribute="Function" context="#stay"/>
            <RegExpr String="\b[_A-Z][_a-zA-Z0-9]*\b" attribute="Type" context="#stay"/>
            <RegExpr String="\.\b[_a-zA-Z][_a-zA-Z0-9]*\b(?![\(\{])" attribute="Attribute" context="#stay"/>
        </context>
        <context attribute="String" lineEndContext="#stay" name="String">
            <RegExpr String="\\([nrt\\'&quot;]|x[0-9a-fA-F]{2}|u[0-9a-fA-F]{4}|U[0-9a-fA-F]{6})" attribute="Escape" context="#stay"/>
            <DetectChar char="&quot;" attribute="String" context="#pop"/>
        </context>
        <context attribute="String" lineEndContext="#pop" name="Multiline String"/>
        <context attribute="Comment" lineEndContext="#pop" name="Comment">
            <IncludeRules context="##Alerts"/>
        </context>
    </contexts>
    <itemDatas>
        <itemData name="Normal Text" defStyleNum="dsNormal"/>
        <itemData name="Identifier" defStyleNum="dsNormal"/>
        <itemData name="Function" defStyleNum="dsFunction" spellChecking="0"/>
        <itemData name="Flow Keyword" defStyleNum="dsControlFlow" spellChecking="0"/>
        <itemData name="Comptime Keyword" defStyleNum="dsPreprocessor" spellChecking="0"/>
        <itemData name="Async Keyword" defStyleNum="dsKeyword" spellChecking="0"/>
        <itemData name="Modifier Keyword" defStyleNum="dsExtension" spellChecking="0"/>
        <itemData name="Definition Keyword" defStyleNum="dsVariable" spellChecking="0"/>
        <itemData name="Attribute" defStyleNum="dsAttribute" spellChecking="0"/>
        <itemData name="Operator" defStyleNum="dsOperator" spellChecking="0"/>
        <itemData name="Type" defStyleNum="dsDataType" spellChecking="0"/>
        <itemData name="Self" defStyleNum="dsAnnotation" spellChecking="0" />
        <itemData name="Builtin Function" defStyleNum="dsBuiltIn" spellChecking="0"/>
        <itemData name="Constant" defStyleNum="dsConstant" spellChecking="0"/>
        <itemData name="Comment" defStyleNum="dsComment"/>
        <itemData name="Binary" defStyleNum="dsBaseN"/>
        <itemData name="Octal" defStyleNum="dsBaseN"/>
        <itemData name="Decimal" defStyleNum="dsDecVal"/>
        <itemData name="Hex" defStyleNum="dsBaseN"/>
        <itemData name="Float" defStyleNum="dsFloat"/>
        <itemData name="String" defStyleNum="dsString"/>
        <itemData name="Escape" defStyleNum="dsSpecialChar"/>
        <itemData name="Character" defStyleNum="dsChar"/>
        <itemData name="Symbol" defStyleNum="dsOperator"/>
        <itemData name="Error" defStyleNum="dsError"/>
    </itemDatas>
</highlighting>
<general>
    <comments>
        <comment name="singleLine" start="//" />
    </comments>
    <keywords casesensitive="1" />
</general>
</language>
